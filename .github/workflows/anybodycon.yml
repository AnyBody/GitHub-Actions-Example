name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: 0 3 * * 6

jobs:
  configure:
    # https://github.com/aws/aws-cdk/issues/15179
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"

  processing:
    needs: configure
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/anybody/anybodycon-linux:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}


    steps:
      - uses: actions/checkout@v3

      - name: Run AnyBodyCon directly
        env:
          RLM_LICENSE_PASSWORD: ${{ secrets.LICENSE_TEST_SERVER_PASSWORD }}
          RLM_LICENSE: ${{ secrets.LICENSE_TEST_SERVER }}
        run: |
          anybodycon /ni
          # python processing-script.py 

      - name: Run processing with Python
        env:
          RLM_LICENSE_PASSWORD: ${{ secrets.LICENSE_TEST_SERVER_PASSWORD }}
          RLM_LICENSE: ${{ secrets.LICENSE_TEST_SERVER }}
        shell: python
        run: |
          import anypytools 
          app = anypytools.AnyPyProcess()
          macro = [
            'load "knee.main.any"',
            'operation Main.MyStudy.InverseDynamics',
            'run',
            'classoperation Main.MyStudy.Output.Abscissa.t "Dump"',
            'classoperation Main.MyStudy.Output.MomentArm "Dump"',
          ]
          results = app.start_macro(macro)
          
          df = results.to_dataframe()
          df.to_pickle("result.pkl.bz2")

      - uses: actions/upload-artifact@v2
        with:
          name: Processing results
          path: result.pkl.bz2
